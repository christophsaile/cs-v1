{"version":3,"sources":["scripts.head.all.min.js"],"names":["window","document","undefined","tests","ModernizrProto","_version","_config","classPrefix","enableClasses","enableJSClass","usePrefixes","_q","on","test","cb","self","this","setTimeout","addTest","name","fn","options","push","addAsyncTest","Modernizr","prototype","classes","is","obj","type","hasOwnProp","_hasOwnProperty","docElement","documentElement","isSVG","nodeName","toLowerCase","setClasses","className","baseVal","reJS","RegExp","replace","length","join","feature","key","featureNameSplit","split","last","Boolean","_trigger","hasOwnProperty","call","object","property","constructor","_l","res","cbs","i","prefixes","createElement","arguments","createElementNS","apply","getBody","body","fake","_prefixes","matchMedia","mq","msMatchMedia","mql","matches","bool","rule","callback","nodes","testnames","style","node","docOverflow","mod","div","parseInt","id","appendChild","styleSheet","cssText","createTextNode","background","overflow","parentNode","removeChild","offsetHeight","injectElementWithStyles","getComputedStyle","currentStyle","position","TouchEvent","DocumentTouch","query","createSVGRect","activex","attachBody","contains","removeFakeBody","runTest","result","embed","blocked","ActiveXObject","e","navigator","plugins","blockedDetect","inline_style","featureNames","aliasIdx","nameIdx","featureIdx","aliases","testRunner","modules","installedModules","__webpack_require__","moduleId","exports","module","l","m","c","d","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","bind","n","p","s","./src/resources/ts/biotope.ts","BiotopeConfiguration","set","setAux","_data","reduce","dataValue","_a","first","rest","slice","Biotope","configuration","biotope"],"mappings":"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","file":"scripts.head.all.min.js","sourcesContent":["/*!\n * modernizr v3.7.1\n * Build https://modernizr.com/download?-flash-svg-touchevents-addtest-setclasses-dontmin\n *\n * Copyright (c)\n *  Faruk Ates\n *  Paul Irish\n *  Alex Sexton\n *  Ryan Seddon\n *  Patrick Kettner\n *  Stu Cox\n *  Richard Herrera\n *  Veeck\n\n * MIT License\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in the\n * current UA and makes the results available to you in two ways: as properties on\n * a global `Modernizr` object, and as classes on the `<html>` element. This\n * information allows you to progressively enhance your pages with a granular level\n * of control over the experience.\n*/\n\n;(function(window, document, undefined){\n\n  var tests = [];\n  \n\n  /**\n   * ModernizrProto is the constructor for Modernizr\n   *\n   * @class\n   * @access public\n   */\n  var ModernizrProto = {\n    // The current version, dummy\n    _version: '3.7.1',\n\n    // Any settings that don't work as separate modules\n    // can go in here as configuration.\n    _config: {\n      'classPrefix': '',\n      'enableClasses': true,\n      'enableJSClass': true,\n      'usePrefixes': true\n    },\n\n    // Queue of tests\n    _q: [],\n\n    // Stub these for people who are listening\n    on: function(test, cb) {\n      // I don't really think people should do this, but we can\n      // safe guard it a bit.\n      // -- NOTE:: this gets WAY overridden in src/addTest for actual async tests.\n      // This is in case people listen to synchronous tests. I would leave it out,\n      // but the code to *disallow* sync tests in the real version of this\n      // function is actually larger than this.\n      var self = this;\n      setTimeout(function() {\n        cb(self[test]);\n      }, 0);\n    },\n\n    addTest: function(name, fn, options) {\n      tests.push({name: name, fn: fn, options: options});\n    },\n\n    addAsyncTest: function(fn) {\n      tests.push({name: null, fn: fn});\n    }\n  };\n\n  \n\n  // Fake some of Object.create so we can force non test results to be non \"own\" properties.\n  var Modernizr = function() {};\n  Modernizr.prototype = ModernizrProto;\n\n  // Leak modernizr globally when you `require` it rather than force it here.\n  // Overwrite name so constructor name is nicer :D\n  Modernizr = new Modernizr();\n\n  \n\n  var classes = [];\n  \n\n  /**\n   * is returns a boolean if the typeof an obj is exactly type.\n   *\n   * @access private\n   * @function is\n   * @param {*} obj - A thing we want to check the type of\n   * @param {string} type - A string to compare the typeof against\n   * @returns {boolean} true if the typeof the first parameter is exactly the specified type, false otherwise\n   */\n  function is(obj, type) {\n    return typeof obj === type;\n  }\n\n  ;\n\n  /**\n   * Run through all tests and detect their support in the current UA.\n   *\n   * @access private\n   * @returns {void}\n   */\n  function testRunner() {\n    var featureNames;\n    var feature;\n    var aliasIdx;\n    var result;\n    var nameIdx;\n    var featureName;\n    var featureNameSplit;\n\n    for (var featureIdx in tests) {\n      if (tests.hasOwnProperty(featureIdx)) {\n        featureNames = [];\n        feature = tests[featureIdx];\n        // run the test, throw the return value into the Modernizr,\n        // then based on that boolean, define an appropriate className\n        // and push it into an array of classes we'll join later.\n        //\n        // If there is no name, it's an 'async' test that is run,\n        // but not directly added to the object. That should\n        // be done with a post-run addTest call.\n        if (feature.name) {\n          featureNames.push(feature.name.toLowerCase());\n\n          if (feature.options && feature.options.aliases && feature.options.aliases.length) {\n            // Add all the aliases into the names list\n            for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\n              featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\n            }\n          }\n        }\n\n        // Run the test, or use the raw value if it's not a function\n        result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\n\n        // Set each of the names on the Modernizr object\n        for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\n          featureName = featureNames[nameIdx];\n          // Support dot properties as sub tests. We don't do checking to make sure\n          // that the implied parent tests have been added. You must call them in\n          // order (either in the test, or make the parent test a dependency).\n          //\n          // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\n          // hashtag famous last words\n          featureNameSplit = featureName.split('.');\n\n          if (featureNameSplit.length === 1) {\n            Modernizr[featureNameSplit[0]] = result;\n          } else {\n            // cast to a Boolean, if not one already\n            if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n              Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n            }\n\n            Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\n          }\n\n          classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\n        }\n      }\n    }\n  }\n  ;\n\n  /**\n   * docElement is a convenience wrapper to grab the root element of the document\n   *\n   * @access private\n   * @returns {HTMLElement|SVGElement} The root element of the document\n   */\n  var docElement = document.documentElement;\n  \n\n  /**\n   * A convenience helper to check if the document we are running in is an SVG document\n   *\n   * @access private\n   * @returns {boolean}\n   */\n  var isSVG = docElement.nodeName.toLowerCase() === 'svg';\n\n  \n\n  /**\n   * setClasses takes an array of class names and adds them to the root element\n   *\n   * @access private\n   * @function setClasses\n   * @param {string[]} classes - Array of class names\n   */\n  // Pass in an and array of class names, e.g.:\n  //  ['no-webp', 'borderradius', ...]\n  function setClasses(classes) {\n    var className = docElement.className;\n    var classPrefix = Modernizr._config.classPrefix || '';\n\n    if (isSVG) {\n      className = className.baseVal;\n    }\n\n    // Change `no-js` to `js` (independently of the `enableClasses` option)\n    // Handle classPrefix on this too\n    if (Modernizr._config.enableJSClass) {\n      var reJS = new RegExp('(^|\\\\s)' + classPrefix + 'no-js(\\\\s|$)');\n      className = className.replace(reJS, '$1' + classPrefix + 'js$2');\n    }\n\n    if (Modernizr._config.enableClasses) {\n      // Add the new classes\n      if (classes.length > 0) {\n        className += ' ' + classPrefix + classes.join(' ' + classPrefix);\n      }\n      if (isSVG) {\n        docElement.className.baseVal = className;\n      } else {\n        docElement.className = className;\n      }\n    }\n  }\n\n  ;\n\n  /**\n   * hasOwnProp is a shim for hasOwnProperty that is needed for Safari 2.0 support\n   *\n   * @author kangax\n   * @access private\n   * @function hasOwnProp\n   * @param {object} object - The object to check for a property\n   * @param {string} property - The property to check for\n   * @returns {boolean}\n   */\n\n  // hasOwnProperty shim by kangax needed for Safari 2.0 support\n  var hasOwnProp;\n\n  (function() {\n    var _hasOwnProperty = ({}).hasOwnProperty;\n    /* istanbul ignore else */\n    /* we have no way of testing IE 5.5 or safari 2,\n     * so just assume the else gets hit */\n    if (!is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined')) {\n      hasOwnProp = function(object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function(object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n  })();\n\n  \n\n\n  // _l tracks listeners for async tests, as well as tests that execute after the initial run\n  ModernizrProto._l = {};\n\n  /**\n   * Modernizr.on is a way to listen for the completion of async tests. Being\n   * asynchronous, they may not finish before your scripts run. As a result you\n   * will get a possibly false negative `undefined` value.\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.on\n   * @access public\n   * @function on\n   * @param {string} feature - String name of the feature detect\n   * @param {Function} cb - Callback function returning a Boolean - true if feature is supported, false if not\n   * @returns {void}\n   * @example\n   *\n   * ```js\n   * Modernizr.on('flash', function( result ) {\n   *   if (result) {\n   *    // the browser has flash\n   *   } else {\n   *     // the browser does not have flash\n   *   }\n   * });\n   * ```\n   */\n  ModernizrProto.on = function(feature, cb) {\n    // Create the list of listeners if it doesn't exist\n    if (!this._l[feature]) {\n      this._l[feature] = [];\n    }\n\n    // Push this test on to the listener list\n    this._l[feature].push(cb);\n\n    // If it's already been resolved, trigger it on next tick\n    if (Modernizr.hasOwnProperty(feature)) {\n      // Next Tick\n      setTimeout(function() {\n        Modernizr._trigger(feature, Modernizr[feature]);\n      }, 0);\n    }\n  };\n\n  /**\n   * _trigger is the private function used to signal test completion and run any\n   * callbacks registered through [Modernizr.on](#modernizr-on)\n   *\n   * @memberOf Modernizr\n   * @name Modernizr._trigger\n   * @access private\n   * @function _trigger\n   * @param {string} feature - string name of the feature detect\n   * @param {Function|boolean} [res] - A feature detection function, or the boolean =\n   * result of a feature detection function\n   * @returns {void}\n   */\n  ModernizrProto._trigger = function(feature, res) {\n    if (!this._l[feature]) {\n      return;\n    }\n\n    var cbs = this._l[feature];\n\n    // Force async\n    setTimeout(function() {\n      var i, cb;\n      for (i = 0; i < cbs.length; i++) {\n        cb = cbs[i];\n        cb(res);\n      }\n    }, 0);\n\n    // Don't trigger these again\n    delete this._l[feature];\n  };\n\n  /**\n   * addTest allows you to define your own feature detects that are not currently\n   * included in Modernizr (under the covers it's the exact same code Modernizr\n   * uses for its own [feature detections](https://github.com/Modernizr/Modernizr/tree/master/feature-detects)).\n   * Just like the official detects, the result\n   * will be added onto the Modernizr object, as well as an appropriate className set on\n   * the html element when configured to do so\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.addTest\n   * @optionName Modernizr.addTest()\n   * @optionProp addTest\n   * @access public\n   * @function addTest\n   * @param {string|Object} feature - The string name of the feature detect, or an\n   * object of feature detect names and test\n   * @param {Function|boolean} test - Function returning true if feature is supported,\n   * false if not. Otherwise a boolean representing the results of a feature detection\n   * @returns {Object} the Modernizr object to allow chaining\n   * @example\n   *\n   * The most common way of creating your own feature detects is by calling\n   * `Modernizr.addTest` with a string (preferably just lowercase, without any\n   * punctuation), and a function you want executed that will return a boolean result\n   *\n   * ```js\n   * Modernizr.addTest('itsTuesday', function() {\n   *  var d = new Date();\n   *  return d.getDay() === 2;\n   * });\n   * ```\n   *\n   * When the above is run, it will set Modernizr.itstuesday to `true` when it is tuesday,\n   * and to `false` every other day of the week. One thing to notice is that the names of\n   * feature detect functions are always lowercased when added to the Modernizr object. That\n   * means that `Modernizr.itsTuesday` will not exist, but `Modernizr.itstuesday` will.\n   *\n   *\n   *  Since we only look at the returned value from any feature detection function,\n   *  you do not need to actually use a function. For simple detections, just passing\n   *  in a statement that will return a boolean value works just fine.\n   *\n   * ```js\n   * Modernizr.addTest('hasjquery', 'jQuery' in window);\n   * ```\n   *\n   * Just like before, when the above runs `Modernizr.hasjquery` will be true if\n   * jQuery has been included on the page. Not using a function saves a small amount\n   * of overhead for the browser, as well as making your code much more readable.\n   *\n   * Finally, you also have the ability to pass in an object of feature names and\n   * their tests. This is handy if you want to add multiple detections in one go.\n   * The keys should always be a string, and the value can be either a boolean or\n   * function that returns a boolean.\n   *\n   * ```js\n   * var detects = {\n   *  'hasjquery': 'jQuery' in window,\n   *  'itstuesday': function() {\n   *    var d = new Date();\n   *    return d.getDay() === 2;\n   *  }\n   * }\n   *\n   * Modernizr.addTest(detects);\n   * ```\n   *\n   * There is really no difference between the first methods and this one, it is\n   * just a convenience to let you write more readable code.\n   */\n  function addTest(feature, test) {\n\n    if (typeof feature === 'object') {\n      for (var key in feature) {\n        if (hasOwnProp(feature, key)) {\n          addTest(key, feature[ key ]);\n        }\n      }\n    } else {\n\n      feature = feature.toLowerCase();\n      var featureNameSplit = feature.split('.');\n      var last = Modernizr[featureNameSplit[0]];\n\n      // Again, we don't check for parent test existence. Get that right, though.\n      if (featureNameSplit.length === 2) {\n        last = last[featureNameSplit[1]];\n      }\n\n      if (typeof last !== 'undefined') {\n        // we're going to quit if you're trying to overwrite an existing test\n        // if we were to allow it, we'd do this:\n        //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n        //   docElement.className = docElement.className.replace( re, '' );\n        // but, no rly, stuff 'em.\n        return Modernizr;\n      }\n\n      test = typeof test === 'function' ? test() : test;\n\n      // Set the value (this is the magic, right here).\n      if (featureNameSplit.length === 1) {\n        Modernizr[featureNameSplit[0]] = test;\n      } else {\n        // cast to a Boolean, if not one already\n        if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n          Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n        }\n\n        Modernizr[featureNameSplit[0]][featureNameSplit[1]] = test;\n      }\n\n      // Set a single class (either `feature` or `no-feature`)\n      setClasses([(!!test && test !== false ? '' : 'no-') + featureNameSplit.join('-')]);\n\n      // Trigger the event\n      Modernizr._trigger(feature, test);\n    }\n\n    return Modernizr; // allow chaining.\n  }\n\n  // After all the tests are run, add self to the Modernizr prototype\n  Modernizr._q.push(function() {\n    ModernizrProto.addTest = addTest;\n  });\n\n  \n\n\n  /**\n   * List of property values to set for css tests. See ticket #21\n   * https://github.com/modernizr/modernizr/issues/21\n   *\n   * @memberOf Modernizr\n   * @name Modernizr._prefixes\n   * @optionName Modernizr._prefixes\n   * @optionProp prefixes\n   * @access public\n   * @example\n   *\n   * Modernizr._prefixes is the internal list of prefixes that we test against\n   * inside of things like [prefixed](#modernizr-prefixed) and [prefixedCSS](#-code-modernizr-prefixedcss). It is simply\n   * an array of kebab-case vendor prefixes you can use within your code.\n   *\n   * Some common use cases include\n   *\n   * Generating all possible prefixed version of a CSS property\n   * ```js\n   * var rule = Modernizr._prefixes.join('transform: rotate(20deg); ');\n   *\n   * rule === 'transform: rotate(20deg); webkit-transform: rotate(20deg); moz-transform: rotate(20deg); o-transform: rotate(20deg); ms-transform: rotate(20deg);'\n   * ```\n   *\n   * Generating all possible prefixed version of a CSS value\n   * ```js\n   * rule = 'display:' +  Modernizr._prefixes.join('flex; display:') + 'flex';\n   *\n   * rule === 'display:flex; display:-webkit-flex; display:-moz-flex; display:-o-flex; display:-ms-flex; display:flex'\n   * ```\n   */\n  // we use ['',''] rather than an empty array in order to allow a pattern of .`join()`ing prefixes to test\n  // values in feature detects to continue to work\n  var prefixes = (ModernizrProto._config.usePrefixes ? ' -webkit- -moz- -o- -ms- '.split(' ') : ['','']);\n\n  // expose these for the plugin API. Look in the source for how to join() them against your input\n  ModernizrProto._prefixes = prefixes;\n\n  \n\n  /**\n   * createElement is a convenience wrapper around document.createElement. Since we\n   * use createElement all over the place, this allows for (slightly) smaller code\n   * as well as abstracting away issues with creating elements in contexts other than\n   * HTML documents (e.g. SVG documents).\n   *\n   * @access private\n   * @function createElement\n   * @returns {HTMLElement|SVGElement} An HTML or SVG element\n   */\n  function createElement() {\n    if (typeof document.createElement !== 'function') {\n      // This is the case in IE7, where the type of createElement is \"object\".\n      // For this reason, we cannot call apply() as Object is not a Function.\n      return document.createElement(arguments[0]);\n    } else if (isSVG) {\n      return document.createElementNS.call(document, 'http://www.w3.org/2000/svg', arguments[0]);\n    } else {\n      return document.createElement.apply(document, arguments);\n    }\n  }\n\n  ;\n\n  /**\n   * getBody returns the body of a document, or an element that can stand in for\n   * the body if a real body does not exist\n   *\n   * @access private\n   * @function getBody\n   * @returns {HTMLElement|SVGElement} Returns the real body of a document, or an\n   * artificially created element that stands in for the body\n   */\n  function getBody() {\n    // After page load injecting a fake body doesn't work so check if body exists\n    var body = document.body;\n\n    if (!body) {\n      // Can't use the real body create a fake one.\n      body = createElement(isSVG ? 'svg' : 'body');\n      body.fake = true;\n    }\n\n    return body;\n  }\n\n  ;\n\n  /**\n   * injectElementWithStyles injects an element with style element and some CSS rules\n   *\n   * @access private\n   * @function injectElementWithStyles\n   * @param {string} rule - String representing a css rule\n   * @param {Function} callback - A function that is used to test the injected element\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\n   * @returns {boolean} the result of the specified callback test\n   */\n  function injectElementWithStyles(rule, callback, nodes, testnames) {\n    var mod = 'modernizr';\n    var style;\n    var ret;\n    var node;\n    var docOverflow;\n    var div = createElement('div');\n    var body = getBody();\n\n    if (parseInt(nodes, 10)) {\n      // In order not to give false positives we create a node for each test\n      // This also allows the method to scale for unspecified uses\n      while (nodes--) {\n        node = createElement('div');\n        node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n        div.appendChild(node);\n      }\n    }\n\n    style = createElement('style');\n    style.type = 'text/css';\n    style.id = 's' + mod;\n\n    // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n    // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n    (!body.fake ? div : body).appendChild(style);\n    body.appendChild(div);\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = rule;\n    } else {\n      style.appendChild(document.createTextNode(rule));\n    }\n    div.id = mod;\n\n    if (body.fake) {\n      //avoid crashing IE8, if background image is used\n      body.style.background = '';\n      //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n      body.style.overflow = 'hidden';\n      docOverflow = docElement.style.overflow;\n      docElement.style.overflow = 'hidden';\n      docElement.appendChild(body);\n    }\n\n    ret = callback(div, rule);\n    // If this is done after page load we don't want to remove the body so check if body exists\n    if (body.fake) {\n      body.parentNode.removeChild(body);\n      docElement.style.overflow = docOverflow;\n      // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n      // eslint-disable-next-line\n      docElement.offsetHeight;\n    } else {\n      div.parentNode.removeChild(div);\n    }\n\n    return !!ret;\n  }\n\n  ;\n\n  /**\n   * Modernizr.mq tests a given media query, live against the current state of the window\n   * adapted from matchMedia polyfill by Scott Jehl and Paul Irish\n   * gist.github.com/786768\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.mq\n   * @optionName Modernizr.mq()\n   * @optionProp mq\n   * @access public\n   * @function mq\n   * @param {string} mq - String of the media query we want to test\n   * @returns {boolean}\n   * @example\n   * Modernizr.mq allows for you to programmatically check if the current browser\n   * window state matches a media query.\n   *\n   * ```js\n   *  var query = Modernizr.mq('(min-width: 900px)');\n   *\n   *  if (query) {\n   *    // the browser window is larger than 900px\n   *  }\n   * ```\n   *\n   * Only valid media queries are supported, therefore you must always include values\n   * with your media query\n   *\n   * ```js\n   * // good\n   *  Modernizr.mq('(min-width: 900px)');\n   *\n   * // bad\n   *  Modernizr.mq('min-width');\n   * ```\n   *\n   * If you would just like to test that media queries are supported in general, use\n   *\n   * ```js\n   *  Modernizr.mq('only all'); // true if MQ are supported, false if not\n   * ```\n   *\n   * Note that if the browser does not support media queries (e.g. old IE) mq will\n   * always return false.\n   */\n  var mq = (function() {\n    var matchMedia = window.matchMedia || window.msMatchMedia;\n    if (matchMedia) {\n      return function(mq) {\n        var mql = matchMedia(mq);\n        return mql && mql.matches || false;\n      };\n    }\n\n    return function(mq) {\n      var bool = false;\n\n      injectElementWithStyles('@media ' + mq + ' { #modernizr { position: absolute; } }', function(node) {\n        bool = (window.getComputedStyle ?\n          window.getComputedStyle(node, null) :\n          node.currentStyle).position === 'absolute';\n      });\n\n      return bool;\n    };\n  })();\n\n  ModernizrProto.mq = mq;\n\n  \n/*!\n{\n  \"name\": \"Touch Events\",\n  \"property\": \"touchevents\",\n  \"caniuse\": \"touch\",\n  \"tags\": [\"media\", \"attribute\"],\n  \"notes\": [{\n    \"name\": \"Touch Events spec\",\n    \"href\": \"https://www.w3.org/TR/2013/WD-touch-events-20130124/\"\n  }],\n  \"warnings\": [\n    \"Indicates if the browser supports the Touch Events spec, and does not necessarily reflect a touchscreen device\"\n  ],\n  \"knownBugs\": [\n    \"False-positive on some configurations of Nokia N900\",\n    \"False-positive on some BlackBerry 6.0 builds – https://github.com/Modernizr/Modernizr/issues/372#issuecomment-3112695\"\n  ]\n}\n!*/\n/* DOC\nIndicates if the browser supports the W3C Touch Events API.\n\nThis *does not* necessarily reflect a touchscreen device:\n\n* Older touchscreen devices only emulate mouse events\n* Modern IE touch devices implement the Pointer Events API instead: use `Modernizr.pointerevents` to detect support for that\n* Some browsers & OS setups may enable touch APIs when no touchscreen is connected\n* Future browsers may implement other event models for touch interactions\n\nSee this article: [You Can't Detect A Touchscreen](http://www.stucox.com/blog/you-cant-detect-a-touchscreen/).\n\nIt's recommended to bind both mouse and touch/pointer events simultaneously – see [this HTML5 Rocks tutorial](https://www.html5rocks.com/en/mobile/touchandmouse/).\n\nThis test will also return `true` for Firefox 4 Multitouch support.\n*/\n\n  // Chrome (desktop) used to lie about its support on this, but that has since been rectified: https://bugs.chromium.org/p/chromium/issues/detail?id=36415\n  // Chrome also changed its behaviour since v70 and recommends the TouchEvent object for detection: https://www.chromestatus.com/feature/4764225348042752\n  Modernizr.addTest('touchevents', function() {\n    if (('ontouchstart' in window) || window.TouchEvent || window.DocumentTouch && document instanceof DocumentTouch) {\n      return true;\n    }\n\n    // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n    // https://github.com/Modernizr/Modernizr/issues/1814\n    var query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\n    return mq(query);\n  });\n\n/*!\n{\n  \"name\": \"SVG\",\n  \"property\": \"svg\",\n  \"caniuse\": \"svg\",\n  \"tags\": [\"svg\"],\n  \"authors\": [\"Erik Dahlstrom\"],\n  \"polyfills\": [\n    \"svgweb\",\n    \"raphael\",\n    \"amplesdk\",\n    \"canvg\",\n    \"svg-boilerplate\",\n    \"sie\",\n    \"dojogfx\",\n    \"fabricjs\"\n  ]\n}\n!*/\n/* DOC\nDetects support for SVG in `<embed>` or `<object>` elements.\n*/\n\n  Modernizr.addTest('svg', !!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\n\n/*!\n  {\n  \"name\": \"Flash\",\n  \"property\": \"flash\",\n  \"tags\": [\"flash\"],\n  \"polyfills\": [\"shumway\"]\n  }\n  !*/\n/* DOC\nDetects Flash support as well as Flash-blocking plugins\n*/\n\n  Modernizr.addAsyncTest(function() {\n\n    var attachBody = function(body) {\n      if (!docElement.contains(body)) {\n        docElement.appendChild(body);\n      }\n    };\n    var removeFakeBody = function(body) {\n      // If we’re rockin’ an attached fake body, clean it up\n      if (body.fake && body.parentNode) {\n        body.parentNode.removeChild(body);\n      }\n    };\n    var runTest = function(result, embed) {\n      var bool = !!result;\n      if (bool) {\n        bool = new Boolean(bool);\n        bool.blocked = (result === 'blocked');\n      }\n      addTest('flash', function() { return bool; });\n\n      if (embed && body.contains(embed)) {\n\n        // in case embed has been wrapped, as with ClickToPlugin\n        while (embed.parentNode !== body) {\n          embed = embed.parentNode;\n        }\n\n        body.removeChild(embed);\n      }\n\n    };\n    var easy_detect;\n    var activex;\n    // we wrap activex in a try/catch because when Flash is disabled through\n    // ActiveX controls, it throws an error.\n    try {\n      // Pan is an API that exists for Flash objects.\n      activex = 'ActiveXObject' in window && 'Pan' in new window.ActiveXObject('ShockwaveFlash.ShockwaveFlash');\n    } catch (e) {}\n\n    easy_detect = !(('plugins' in navigator && 'Shockwave Flash' in navigator.plugins) || activex);\n\n    if (easy_detect || isSVG) {\n      runTest(false);\n    }\n    else {\n      // Flash seems to be installed, but it might be blocked. We have to\n      // actually create an element to see what happens to it.\n      var embed = createElement('embed');\n      var body = getBody();\n      var blockedDetect;\n      var inline_style;\n\n      embed.type = 'application/x-shockwave-flash';\n\n      // Need to do this in the body (fake or otherwise) otherwise IE8 complains\n      body.appendChild(embed);\n\n      // Pan doesn't exist in the embed if its IE (its on the ActiveXObject)\n      // so this check is for all other browsers.\n      if (!('Pan' in embed) && !activex) {\n        attachBody(body);\n        runTest('blocked', embed);\n        removeFakeBody(body);\n        return;\n      }\n\n      blockedDetect = function() {\n        // if we used a fake body originally, we need to restart this test, since\n        // we haven't been attached to the DOM, and therefore none of the blockers\n        // have had time to work.\n        attachBody(body);\n        if (!docElement.contains(body)) {\n          body = document.body || body;\n          embed = createElement('embed');\n          embed.type = 'application/x-shockwave-flash';\n          body.appendChild(embed);\n          return setTimeout(blockedDetect, 1000);\n        }\n        if (!docElement.contains(embed)) {\n          runTest('blocked');\n        }\n        else {\n          inline_style = embed.style.cssText;\n          if (inline_style !== '') {\n            // the style of the element has changed automatically. This is a\n            // really poor heuristic, but for lower end Flash blocks, it the\n            // only change they can make.\n            runTest('blocked', embed);\n          }\n          else {\n            runTest(true, embed);\n          }\n        }\n        removeFakeBody(body);\n      };\n\n      // If we have got this far, there is still a chance a userland plugin\n      // is blocking us (either changing the styles, or automatically removing\n      // the element). Both of these require us to take a step back for a moment\n      // to allow for them to get time of the thread, hence a setTimeout.\n      //\n      setTimeout(blockedDetect, 10);\n    }\n  });\n\n\n  // Run each test\n  testRunner();\n\n  // Remove the \"no-js\" class if it exists\n  setClasses(classes);\n\n  delete ModernizrProto.addTest;\n  delete ModernizrProto.addAsyncTest;\n\n  // Run the things that are supposed to run after the tests\n  for (var i = 0; i < Modernizr._q.length; i++) {\n    Modernizr._q[i]();\n  }\n\n  // Leak Modernizr namespace\n  window.Modernizr = Modernizr;\n\n\n;\n\n})(window, document);\n\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/resources/ts/biotope.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/resources/ts/biotope.ts\":\n/*!*************************************!*\\\n  !*** ./src/resources/ts/biotope.ts ***!\n  \\*************************************/\n/*! no static exports found */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\n/***/ (function(module, exports) {\n\nvar BiotopeConfiguration = /** @class */ (function () {\r\n    function BiotopeConfiguration() {\r\n    }\r\n    BiotopeConfiguration.set = function (key, value) {\r\n        this.setAux(key, value, this._data);\r\n    };\r\n    BiotopeConfiguration.get = function (key) {\r\n        return key.split('.').reduce(function (o, i) { return o[i]; }, this._data);\r\n    };\r\n    BiotopeConfiguration.setAux = function (key, value, dataValue) {\r\n        if (dataValue === void 0) { dataValue = {}; }\r\n        var _a = key.split('.'), first = _a[0], rest = _a.slice(1);\r\n        if (rest.length) {\r\n            dataValue[first] = this.setAux(rest.join('.'), value, dataValue[first]);\r\n        }\r\n        else {\r\n            dataValue[first] = value;\r\n        }\r\n        return dataValue;\r\n    };\r\n    BiotopeConfiguration._data = {};\r\n    return BiotopeConfiguration;\r\n}());\r\nvar Biotope = /** @class */ (function () {\r\n    function Biotope() {\r\n        this.configuration = BiotopeConfiguration;\r\n    }\r\n    return Biotope;\r\n}());\r\nwindow.biotope = new Biotope;\r\n\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=biotope.js.map"]}