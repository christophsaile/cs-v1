@import "settings/settings";
@import "../../../node_modules/breakpoint-sass/stylesheets/breakpoint";

#aboutMe,
#contact,
#timeline {
	position: relative;
}

.fullpage {
	height: 100vh;
	padding: 0 6rem 0 2rem;

	@include breakpoint($medium) {
		padding: 0 8rem 0 4rem;
	}

	&--autoLength {
		height: auto;
		min-height: 100vh;
	}

	&--center {
		display: flex;

		portfolio-intro {
			width: 100%;
			max-width: $xxlarge;
			margin: auto;
		}

		portfolio-about-me {
			width: 100%;
			max-width: $xxlarge;
			margin: 0 auto;
		}

		portfolio-timeline {
			margin: auto;

			@include breakpoint($wide) {
				max-width: $ultraWide;
				padding: 0 4rem;
			}
		}

		portfolio-contact {
			width: 100%;
			max-width: $xxlarge;
			margin: 0 auto;
		}
	}
}

//Init loading animation

.initLoader {
	display: none;
	position: fixed;
	width: 100%;
	height: 100vh;
	background-color: $black;
	z-index: 1000;
	opacity: 1;
	transition: opacity 1.5s linear 1.5s;

	&.active {
		display: flex;
	}

	&.fadeOutBackground {
		opacity: 0;
	}

	&__helix {
		$dot-count: 26;
		$dot-size: 5px;
		$dot-space: 15px;
		$dot-start: (($dot-count / 2 + 1) * ($dot-size + $dot-space)) / 2;
		$animation-time: 2s;
		$animation-distance: 25px;
		display: none;
		margin: auto;

		&.active {
			display: flex;
		}

		.loader {
			position: relative;

			.dot {
				animation-name: movement;
				animation-duration: $animation-time;
				animation-iteration-count: infinite;
				animation-timing-function: ease-in-out;
				height: $dot-size;
				position: absolute;
				top: -#{$dot-size};
				transform: translate3d(0, -#{$animation-distance}, 0) scale(1);
				width: $dot-size;

				@for $i from 1 through $dot-count {
					$dot-move: ceil($i / 2);
					$dot-pos: $dot-start -
						(($dot-size + $dot-space) * $dot-move);

					$animation-delay: -#{$i * 0.1}s;
					@if $i % 2 == 0 {
						$animation-delay: -#{($i * 0.1) +
							($animation-time / 2)};
					}

					&:nth-of-type(#{$i}) {
						animation-delay: $animation-delay;
						left: $dot-pos;

						&::before {
							animation-delay: $animation-delay;
						}
					}
				}

				&::before {
					animation-name: size-opacity;
					animation-duration: $animation-time;
					animation-iteration-count: infinite;
					animation-timing-function: ease;
					background: $white;
					border-radius: 50%;
					content: "";
					display: block;
					height: 100%;
					width: 100%;
				}

				&:nth-of-type(even)::before {
					background-color: $white;
					box-shadow: inset 0 0 4px darken($black, 10%);
				}
			}
		}

		@keyframes movement {
			0% {
				transform: translate3d(0, -#{$animation-distance}, 0);
				z-index: 0;
			}
			50% {
				transform: translate3d(0, #{$animation-distance}, 0);
				z-index: 10;
			}
			100% {
				transform: translate3d(0, -#{$animation-distance}, 0);
				z-index: -5;
			}
		}

		@keyframes size-opacity {
			0% {
				opacity: 1;
				transform: scale(1);
			}
			25% {
				transform: scale(1.5);
			}
			50% {
				opacity: 1;
			}
			75% {
				opacity: 0.35;
				transform: scale(0.5);
			}
			100% {
				opacity: 1;
				transform: scale(1);
			}
		}
	}

	&__intro {
		display: none;
		width: 100%;
		max-width: $xxlarge;
		margin: auto;
		padding: 0 6rem 0 2rem;
		animation: fadeInOut 3s linear;

		@include breakpoint($medium) {
			padding: 0 8rem 0 4rem;
		}

		&.active {
			display: flex;
		}

		svg {
			max-height: 70vh;
			width: 100%;
			height: 100%;
		}

		@keyframes fadeInOut {
			0% {
				opacity: 0;
			}
			50% {
				opacity: 1;
			}
			100% {
				opacity: 0;
			}
		}
	}
}
